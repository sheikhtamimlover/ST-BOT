{
  "botAccount": {
    "email": "",
    "password": "",
    "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.6.2 Safari/605.1.15",
    "autoUseWhenEmpty": true,
    "notes": "Bot account configuration. When account.txt is empty, bot will automatically attempt to fetch cookies from this account. Note: 2FA is not supported - if your account has 2FA enabled, you'll need to login manually and save cookies to account.txt instead."
  },
  "bioUpdate": {
    "enable": true,
    "bioText": "",
    "updateOnce": true,
    "notes": "Bio update system. When enabled, bot will update user bio on startup. If updateOnce is true, bio will only be updated once and not on every restart. Leave bioText empty to disable."
  },
  "antiInbox": true,
  "language": "en",
  "notesLanguage": "change to your language with ISO 639-1 code, available languages: vi (Vietnamese), en (English)",
  "nickNameBot": "BD BOT",
  "prefix": "/",
  "adminOnly": {
    "enable": false,
    "ignoreCommand": []
  },
  "adminBot": ["61554414765595"],
  "whiteListMode": {
    "enable": ,
    "whiteListIds": [],
    "notes": "if you enable this feature, only the ids in the whiteListIds list can use the bot"
  },
  "whiteListModeThread": {
    "enable": false,
    "whiteListThreadIds": [],
    "notes": "if you enable this feature, only the thread in the whiteListThreadIds list can use the bot",
    "how_it_work": "if you enable both whiteListMode and whiteListModeThread, the system will check if the user is in whiteListIds, then check if the thread is in whiteListThreadIds, if one of the conditions is true, the user can use the bot"
  },
  "database": {
    "type": "sqlite",
    "uriMongodb": "",
    "autoSyncWhenStart": false,
    "autoRefreshThreadInfoFirstTime": true,
    "notes": "(1) type selects 'json' or 'sqlite' or 'mongodb'. If you choose mongodb, enter uri connect mongodb in the uriMongodb section, instructions to get uri connect mongodb at: https://youtu.be/z1f9urHW5xY. I recommend using 'mongodb' or 'sqlite', json is not recommended because it is not stable. (2) when you set autoSyncWhenStart to true, the bot will automatically synchronize the data in the database when starting the bot, this will make the bot start slower. (3) when you set autoRefreshThreadInfoFirstTime to true, the bot will automatically refresh the thread information when get first message from the thread since starting the bot"
  },
  "timeZone": "Asia/Dhaka",
  "credentials": {
    "gmailAccount": {
      "email": "",
      "clientId": "",
      "clientSecret": "",
      "refreshToken": "",
      "apiKey": "",
      "notes": "Gmail credentials are optional. Leave empty to disable email functionality."
    },
    "gRecaptcha": {
      "siteKey": "",
      "secretKey": "",
      "notes": "reCAPTCHA credentials are optional. Leave empty to disable reCAPTCHA on dashboard."
    }
  },
  "dashBoard": {
    "enable": true,
    "expireVerifyCode": 300000,
    "port": 3001,
    "password": {
      "enable": false,
      "password": "",
      "notes": "Dashboard password protection. When enabled, users need to enter the password to access the dashboard. Leave password empty to disable protection."
    }
  },
  "serverUptime": {
    "enable": false,
    "port": 3001,
    "socket": {
      "enable": true,
      "channelName": "uptime",
      "verifyToken": ""
    }
  },
  "autoRestart": {
    "time": null,
    "notes": "you can set time is interval with milisecond or cron time, example: 1000, 10000, 60000, 3600000, 86400000, 0 0 * * *,... docs: https://www.npmjs.com/package/node-cron. If you set time is 0 or false or null, the bot will not auto restart"
  },
  "autoUptime": {
    "enable": false,
    "timeInterval": 180,
    "url": "",
    "notes": "the value of timeInterval is seconds, url is the url you want to send the request to (automatically detected for hosting glitch or replit)"
  },
  "autoLoadScripts": {
    "enable": false,
    "ignoreCmds": "",
    "ignoreEvents": "",
    "notes": "this feature will automatically load the script when scripts have been changed, you can set ignoreCmds to ignore commands, ignoreEvents to ignore events, separate by comma or space, example: \"cmd1.js cmd2.js cmd3.js\" (without backslash)"
  },
  "autoRefreshFbstate": true,
  "autoReloginWhenChangeAccount": false,
  "autoRestartWhenListenMqttError": false,
  "restartListenMqtt": {
    "enable": true,
    "timeRestart": 3600000,
    "delayAfterStopListening": 2000,
    "logNoti": false,
    "notes": "the value of timeRestart and delayAfterStopListening is milisecond, You shouldn't edit this if you don't know what it is"
  },
  "notiWhenListenMqttError": {
    "notes": "This is the message when the bot is listening to the mqtt server and the mqtt server stops working due to account problems such as: locked acc, blocked due to spam,... bot will automatically send notifications to parts of your settings. You must change enable to true to use this feature. See bot/login/handlerWhenListenHasError.js file for details on how it works",
    "gmail": {
      "enable": false,
      "emailGetNoti": "",
      "note": "Bot will use gmailAccount to send email to emailGetNoti, can send notifications to many email, separate by comma or space, example: \"example1@gmail.com example2@gmail.com\" (without backslash)"
    },
    "telegram": {
      "enable": false,
      "botToken": "",
      "chatId": "",
      "note": "Can send notifications to many chatId, separate by comma or space, example: \"123456789 987654321\" (without backslash)"
    },
    "discordHook": {
      "enable": false,
      "webhookUrl": "",
      "note": "Can send notifications to many webhookUrl, separate by comma or space, example: \"https://discord.com/api/webhooks/123456789/123456789 https://discord.com/api/webhooks/987654321/987654321\" (without backslash)"
    }
  },
  "botStartupNotification": {
    "enable": true,
    "sendToThreads": {
      "enable": true,
      "threadIds": []
    },
    "sendToAdmin": {
      "enable": true,
      "adminId": "61554414765595"
    },
    "message": "ü§ñ Bot is now online and ready to serve!",
    "notes": "Bot startup notification settings. sendToThreads.threadIds can contain multiple thread IDs, sendToAdmin.adminId should contain single admin ID for notifications.Duo to fca issue maybe sendtoadmin not work."
  },
  "threadApproval": {
    "enable": false,
    "adminNotificationThreads": [],
    "autoApproveExisting": true,
    "sendNotifications": true,
    "sendThreadMessage": true,
    "autoApprovedThreads": [],
    "notes": "Thread approval system. When enabled, bot will only respond in approved threads. adminNotificationThreads: array of thread IDs where approval notifications will be sent. autoApproveExisting: if true, all existing threas will be automatically approved when this feature is first enabled. sendNotifications: if false, no admin notifications sent. sendThreadMessage: if false, no message sent to new thread. autoApprovedThreads: array of thread IDs that will be automatically approved without manual intervention."
  },
  "botLogging": {
    "enable": false,
    "sendToThreads": true,
    "logThreadIds": [],
    "sendToAdmins": false,
    "silentOnDisabledThreads": true,
    "logBotAdded": false,
    "logBotKicked": true,
    "notes": "Bot logging system. sendToThreads: if true, sends bot logs to specified thread IDs. logThreadIds: array of thread IDs where bot logs will be sent. sendToAdmins: if true, sends logs to admin IDs. silentOnDisabledThreads: if true, suppresses console errors for disabled threads. logBotAdded/logBotKicked: separate controls for added/kicked events."
  },
  "antiReact": {
    "enable": true,
    "reactByUnsend": {
      "enable": true,
      "emojis": [
        "üëç"
      ]
    },
    "reactByRemove": {
      "enable": true,
      "emoji": "‚ö†"
    },
    "onlyAdminBot": true,
    "notes": "If enabled, bot will unsend BOT MESSAGES when admins react with unsend emojis, and remove users when admins react with remove emoji. Only works for bot admins."
  },
  "hideNotiMessage": {
    "commandNotFound": true,
    "adminOnly": false,
    "threadBanned": true,
    "userBanned": false,
    "needRoleToUseCmd": false,
    "needRoleToUseCmdOnReply": true,
    "needRoleToUseCmdOnReaction": true,
  },
  "logEvents": {
    "disableAll": true,
    "message": true,
    "message_reaction": true,
    "message_unsend": true,
    "message_reply": true,
    "event": true,
    "read_receipt": true,
    "typ": true,
    "presence": true,
  },
  "optionsFca": {
    "forceLogin": true,
    "listenEvents": true,
    "updatePresence": true,
    "listenTyping": true,
    "logLevel": "error",
    "selfListen": false,
    "selfListenEvent": true,
    "autoMarkDelivery": false,
    "autoReconnect": false,
    "notes": "Document here: https://github.com/sheikhtamimlover/fb-chat-api/blob/master/DOCS.md#apisetoptionsoptions "
  }
}
